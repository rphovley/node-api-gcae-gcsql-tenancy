#!/usr/bin/env node

"use strict";
const env = process.env.NODE_ENV ? `${process.env.NODE_ENV}` : ''
require('dotenv').config({
  path: `${__dirname}/.log.env${env}`,
})

console.log()
//module dependencies
const server = require("../dist/server");

//create http server
const Server = server.Server.bootstrap();
const httpServer = Server.httpServer;

//listen on provided ports
httpServer.listen(Server.port);

//add error handler
httpServer.on("error", onError);

//start listening on port
httpServer.on("listening", onListening);

/**
 * Event listener for HTTP server "error" event.
 */
function onError(error) {
  let bind = 'Port or pipe';
  if (error.syscall !== "listen") throw error;
  const addr = httpServer.address();
  if (addr) bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  // handle specific listen errors with friendly messages
  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */
function onListening() {
  const address = httpServer.address();
  const port = address.port;
  console.log('Listening on port ' + port);
}
